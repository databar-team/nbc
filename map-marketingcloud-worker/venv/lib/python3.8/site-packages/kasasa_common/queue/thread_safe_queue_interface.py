from typing import Union, Any

from kasasa_common.queue.queue_interface import QueueInterface


class ThreadSafeQueueInterface(QueueInterface):
    """
    Defines signatures for methods that are specific to thread safe queue types.
    """

    @property
    def empty(self):
        """
        :return:
        """
        raise NotImplementedError

    @property
    def full(self):
        raise NotImplementedError

    def _put(self, item: Any, block: bool, timeout: Union[int, None]):
        raise NotImplementedError

    def _get(self, block: bool, timeout: Union[int, None]):
        raise NotImplementedError

    def _task_done(self):
        raise NotImplementedError

    def join(self):
        """Waits until queue is empty before returning"""
        self._join()

    def _join(self):
        raise NotImplementedError
